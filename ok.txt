1.斐波那契

int fun(int n) {
    int f;
    if (n == 1) {
        f=1;
    }
    else {
        f = fun(n-1) * n;
    }
    return f;
}

int add(int x, int y) {
    return x + y;
}

int main() {
    int a = 4;
    int b = 5;
    int z = add(fun(a), fun(b));
    print(z);
    return 0;
}


2.冒泡排序


int main(){
    int a[10];
    int i=0;
    while(i<10) {
        a[i] = i;
        i = i + 1;
    }
    i = 0;
    while(i<10) {
        print(a[i]);
        i = i + 1;
    }
    i = 0;
    while(i<9) {
        int j = 0;
        while(j<9-i) {
            if (a[j]<a[j+1]) {
                int t = a[j];
                a[j] = a[j+1];
                a[j+1] = t;
            }
            j = j + 1;
        }
        i = i + 1;
    }
    i = 0;
    while(i<10) {
        print(a[i]);
        i = i + 1;
    }
    return 0;
}



// dang qian jie guo
//0 1
//1 2
//1 2
//2 3
int main() {
    int a[2][2][2];

    a[0][0][0] = 0;
    a[0][0][1] = 1;
    a[0][1][0] = 2;
    a[0][1][1] = 3;
    a[1][0][0] = 4;
    a[1][0][1] = 5;
    a[1][0][0] = 6;
    a[1][0][1] = 7;


    return 0;
}

